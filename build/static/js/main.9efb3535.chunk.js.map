{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportant","removeNote","label","important","className","content","onClick","baseUrl","noteService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","alert","toggelImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"0KAYeA,EAVF,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,gBAAiBC,EAAiB,EAAjBA,WAC/BC,EAAQH,EAAKI,UACf,qBAAuB,iBAC3B,OACE,qBAAIC,UAAU,OAAd,UACGL,EAAKM,QADR,IACiB,wBAAQD,UAAU,YAAYE,QAASN,EAAvC,SAAyDE,IAD1E,IAC0F,wBAAQE,UAAU,YAAYE,QAASL,EAAvC,wB,gBCLxFM,EAAU,kCAqCDC,EAPK,CAClBC,OA7Ba,WAEb,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAClB,OAAOA,EAASC,SA2BlBC,OAvBa,SAAAC,GAEb,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAClB,OAAOA,EAASC,SAqBlBI,OAjBa,SAACC,EAAIH,GAElB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAClB,OAAOA,EAASC,SAelBO,OAXa,SAAAF,GAEb,OADgBT,IAAMY,OAAN,UAAgBf,EAAhB,YAA2BY,IAC5BP,MAAK,SAAAC,GAClB,OAAOA,EAASC,UC+DLS,G,MAtFH,SAACC,GACX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACRxB,EACGC,SACAG,MAAK,SAAAqB,GACJN,EAASM,QAGZ,IAEH,IA8CMC,EAAcJ,EAAUJ,EAAQA,EAAMS,QAAO,SAAApC,GAAI,OAAIA,EAAKI,aAEhE,OACE,gCACE,uCACA,yBAAQG,QAAS,kBAAMyB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,SAEhC,6BACGI,EAAYE,KAAI,SAAArC,GAAI,OACnB,cAAC,EAAD,CAEEA,KAAMA,EACNC,gBAAiB,kBA3DA,SAAAmB,GACzB,IAAMpB,EAAO2B,EAAMW,MAAK,SAAAC,GAAC,OAAIA,EAAEnB,KAAOA,KAChCoB,EAAW,2BAAQxC,GAAR,IAAcI,WAAYJ,EAAKI,YAEhDK,EACGU,OAAOC,EAAIoB,GACX3B,MAAK,SAAA4B,GACJb,EAASD,EAAMU,KAAI,SAAArC,GAAI,OAAIA,EAAKoB,KAAOA,EAAKpB,EAAOyC,SAEpDC,OAAM,SAAAC,GACLC,MAAM,aAAD,OACU5C,EAAKM,QADf,uCAGLsB,EAASD,EAAMS,QAAO,SAAAG,GAAC,OAAIA,EAAEnB,KAAOA,SA8CTyB,CAAmB7C,EAAKoB,KAC/ClB,WAAY,kBA1BHkB,EA0BoBpB,EAAKoB,QAzB1CX,EACGa,OAAOF,GACPP,MAAK,SAAA4B,GACJb,EAASD,EAAMS,QAAO,SAAAG,GAAC,OAAIA,EAAEnB,KAAOA,SAJvB,IAAAA,IAuBJpB,EAAKoB,SAOhB,uBAAM0B,SA/CM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB3C,QAASuB,EACTqB,MAAM,IAAIC,MAAOC,cACjBhD,UAAWiD,KAAKC,SAAW,GAC3BlC,GAAIO,EAAM4B,OAAS,GAGrB9C,EACGO,OAAOiC,GACPpC,MAAK,SAAA4B,GACJb,EAASD,EAAM6B,OAAOf,IACtBX,EAAW,QAkCb,UACE,uBAAOzB,UAAU,UAAUoD,MAAO5B,EAAS6B,SAvBxB,SAACX,GACxBjB,EAAWiB,EAAMY,OAAOF,UAuBpB,wBAAQpD,UAAU,OAAOuD,KAAK,SAA9B,0BCjFRC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9efb3535.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportant, removeNote }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n  return (\n    <li className=\"note\">\n      {note.content} <button className=\"important\" onClick={toggleImportant}>{label}</button> <button className=\"important\" onClick={removeNote}>remove</button>\n    </li>\n  )\n}\n\nexport default Note\n","import axios from 'axios'\n\nconst baseUrl = 'http://localhost:3001/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => {\n    return response.data\n  })\n}\n\nconst noteService = {\n  getAll,\n  create,\n  update,\n  remove\n}\n\nexport default noteService\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note.js'\nimport noteService from './services/notes.js'\nimport './index.css'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState(\"\")\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n\n    })\n  }, [])\n\n  const toggelImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        alert(\n          `the note '${note.content}' has been deleted from the server`\n        )\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote(\"\")\n      })\n  }\n\n  const removeNote = id => {\n    noteService\n      .remove(id)\n      .then(returnedNote => {\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <button onClick={() => setShowAll(!showAll)}>\n        show {showAll ? 'important' : 'all'}\n      </button>\n      <ul>\n        {notesToShow.map(note =>\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportant={() => toggelImportanceOf(note.id)}\n            removeNote={() => removeNote(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input className=\"newNote\" value={newNote} onChange={handleNoteChange}/>\n        <button className=\"save\" type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}